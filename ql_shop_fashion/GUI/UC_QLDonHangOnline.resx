<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnDuyetDon.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>